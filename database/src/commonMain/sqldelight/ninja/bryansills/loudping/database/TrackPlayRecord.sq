insert_track:
INSERT INTO track_play_record(id, spotify_track_id, track_number, track_title, spotify_album_id, timestamp, context)
VALUES (
    (SELECT id FROM track_play_record WHERE spotify_track_id = :spotifyTrackId AND spotify_album_id = :spotifyAlbumId AND timestamp = :timestamp ),
    :spotifyTrackId,
    :trackNumber,
    :trackTitle,
    :spotifyAlbumId,
    :timestamp,
    :context
)
ON CONFLICT(id) DO UPDATE SET
    track_number = excluded.track_number,
    track_title = excluded.track_title,
    context = excluded.context
;

get_desc_page_boundaries:
SELECT timestamp
FROM (
  SELECT
    timestamp,
    CASE
      WHEN ((row_number() OVER(ORDER BY timestamp DESC) - 1) % :limit) = 0 THEN 1
      WHEN :anchor IS NOT NULL AND timestamp = :anchor THEN 1
      ELSE 0
    END page_boundary
  FROM track_play_record
  ORDER BY timestamp DESC
)
WHERE page_boundary = 1;

get_desc_track_play_record_page:
SELECT track_play_record.spotify_track_id, track_play_record.track_title, track_play_record.spotify_album_id, track_play_record.timestamp, album.title AS album_title, album.cover_image, artist.name AS artist_name
FROM track_play_record
INNER JOIN album ON track_play_record.spotify_album_id = album.spotify_id
INNER JOIN track_artist ON track_play_record.spotify_track_id = track_artist.spotify_track_id
INNER JOIN artist ON track_artist.spotify_artist_id = artist.spotify_id
WHERE timestamp >= :beginInclusive AND (timestamp < :endExclusive OR :endExclusive IS NULL)
ORDER BY timestamp DESC;

get_asc_constrained_page_boundaries:
SELECT timestamp
FROM (
  SELECT
    timestamp,
    CASE
      WHEN ((row_number() OVER(ORDER BY timestamp ASC) - 1) % :pageSize) = 0 THEN 1
      ELSE 0
    END page_boundary
  FROM track_play_record
  WHERE timestamp >= :olderTime AND timestamp < :newerTime
  ORDER BY timestamp ASC
)
WHERE page_boundary = 1;

get_asc_track_play_record_page:
SELECT
  track_play_record.spotify_track_id,
  track.title AS track_title,
  track.track_number,
  track.disc_number,
  track.duration_ms,
  album.spotify_id AS spotify_album_id,
  album.title AS album_title,
  album.track_count AS album_track_count,
  album.cover_image AS album_cover_image,
  artist.spotify_id AS spotify_artist_id,
  artist.name AS artist_name,
  track_play_record.timestamp,
  track_play_record.context
FROM track_play_record
INNER JOIN track ON track_play_record.spotify_track_id = track.spotify_track_id
INNER JOIN album ON track_play_record.spotify_album_id = album.spotify_id
INNER JOIN track_artist ON track_play_record.spotify_track_id = track_artist.spotify_track_id
INNER JOIN artist ON track_artist.spotify_artist_id = artist.spotify_id
WHERE timestamp >= :olderTime AND timestamp < :newerTime
ORDER BY timestamp ASC;
