insert_track:
INSERT INTO track_play_record(id, spotify_track_id, track_number, track_title, spotify_album_id, timestamp, context)
VALUES (
    (SELECT id FROM track_play_record WHERE spotify_track_id = :spotifyTrackId AND timestamp = :timestamp ),
    :spotifyTrackId,
    :trackNumber,
    :trackTitle,
    :spotifyAlbumId,
    :timestamp,
    :context
);

select_all:
SELECT
    id,
    spotify_track_id,
    track_number,
    track_title,
    spotify_album_id,
    timestamp,
    context
FROM track_play_record
LIMIT 100;

count_tracks:
SELECT count(*) FROM track_play_record;

all:
SELECT
    id,
    spotify_track_id,
    track_number,
    track_title,
    spotify_album_id,
    timestamp,
    context
FROM track_play_record
ORDER BY timestamp DESC
LIMIT :limit OFFSET :offset;

insert_album:
INSERT INTO album(id, spotify_id, track_count, title, cover_image)
VALUES (
    (SELECT id FROM album WHERE spotify_id = :spotifyId),
    :spotifyId,
    :trackCount,
    :title,
    :coverImage
);

insert_artist:
INSERT INTO artist(id, spotify_id, name)
VALUES (
    (SELECT id FROM artist WHERE spotify_id = :spotifyId),
    :spotifyId,
    :name
);

insert_track_artist:
INSERT INTO track_artist(id, spotify_track_id, spotify_artist_id)
VALUES (
    (SELECT id FROM track_artist WHERE spotify_track_id = :spotifyTrackId AND spotify_artist_id = :spotifyArtistId),
    :spotifyTrackId,
    :spotifyArtistId
);

keyed_page_boundaries_play_record:
SELECT timestamp
FROM (
  SELECT
    timestamp,
    CASE
      WHEN ((row_number() OVER(ORDER BY timestamp DESC) - 1) % :limit) = 0 THEN 1
      WHEN :anchor IS NOT NULL AND timestamp = :anchor THEN 1
      ELSE 0
    END page_boundary
  FROM track_play_record
  ORDER BY timestamp DESC
)
WHERE page_boundary = 1;

get_keyed_play_records:
SELECT track_play_record.spotify_track_id, track_play_record.track_title, track_play_record.spotify_album_id, track_play_record.timestamp, album.title AS album_title, album.cover_image, artist.name AS artist_name
FROM track_play_record
INNER JOIN album ON track_play_record.spotify_album_id = album.spotify_id
INNER JOIN track_artist ON track_play_record.spotify_track_id = track_artist.spotify_track_id
INNER JOIN artist ON track_artist.spotify_artist_id = artist.spotify_id
WHERE timestamp >= :beginInclusive AND (timestamp < :endExclusive OR :endExclusive IS NULL)
ORDER BY timestamp DESC;
